file = "../../Process/all_time_points.tab"
file = "../../Process/all_time_points.tab"
classes = c("numeric","numeric","character","numeric","factor","factor","factor","factor",  "factor", "character", "numeric")
df = read.table(file,header=T, colClasses=classes,sep="\t")
head(df)
?ggtitle
require(ggplot2)
?ggtitle
conditions = sort(unique(df$Condition))
arrays = sort(unique(df$Array))
for(condition in conditions){
subCondition = subset(df,df$Condition == condition)
for(array in arrays){
subArray = subset(subCondition,subCondition$Array == array)
ggplot(subCondition,aes(x=as.numeric(Time.Point),y=Size,color=Gene,group=Gene)) + geom_line() + ggtitle(1)
scan()
}
}
for(condition in conditions){
subCondition = subset(df,df$Condition == condition)
for(array in arrays){
subArray = subset(subCondition,subCondition$Array == array)
title = paste(condition, "Array", array)
print(ggplot(subCondition,aes(x=as.numeric(Time.Point),y=Size,color=Gene,group=Gene)) + geom_line() + ggtitle(title))
scan()
}
}
for(condition in conditions){
subCondition = subset(df,df$Condition == condition)
for(array in arrays){
subArray = subset(subCondition,subCondition$Array == array)
title = paste(condition, "Array", array)
print(ggplot(subCondition,aes(x=as.numeric(Time.Point),y=Size,color=Gene,group=Gene)) +
geom_line() +
ggtitle(title) +
theme(legend.position="none"))
scan()
}
}
df$Time.Point = as.numeric(as.character(df$Time.Point))
for(condition in conditions){
subCondition = subset(df,df$Condition == condition)
for(array in arrays){
subArray = subset(subCondition,subCondition$Array == array)
title = paste(condition, "Array", array)
print(ggplot(subCondition,aes(x=as.numeric(Time.Point),y=Size,color=Gene,group=Gene)) +
geom_line() +
ggtitle(title) +
theme(legend.position="none"))
scan()
}
}
?aggregate
agg = aggregate(df,formula = Size ~ Gene + Condition + Array + Time.Point,FUN=mean)
agg = aggregate(formula = Size ~ Gene + Condition + Array + Time.Point, data = df, FUN=mean)
for(condition in conditions){
subCondition = subset(agg,agg$Condition == condition)
for(array in arrays){
subArray = subset(subCondition,subCondition$Array == array)
title = paste(condition, "Array", array)
print(ggplot(subCondition,aes(x=as.numeric(Time.Point),y=Size,color=Gene,group=Gene)) +
geom_line() +
ggtitle(title) +
theme(legend.position="none"))
scan()
}
}
head(subArray)
sort(unique(subArray$Array))
sort(unique(subArray$Condition))
sort(unique(subArray$Gene))
for(condition in conditions){
subCondition = subset(agg,agg$Condition == condition)
for(array in arrays){
subArray = subset(subCondition,subCondition$Array == array)
title = paste(condition, "Array", array)
print(ggplot(subArray,aes(x=as.numeric(Time.Point),y=Size,color=Gene,group=Gene)) +
geom_line() +
ggtitle(title) +
theme(legend.position="none"))
scan()
}
}
condition = "YPD_30"
array = 1
subCondition = subset(agg,agg$Condition == condition)
subArray = subset(subCondition,subCondition$Array == array)
var(subArray$Size)
var(subArray$Size[subArray$Time.Point == 0])
print(ggplot(subArray,aes(x=as.numeric(Time.Point),y=Size,color=Gene,group=Gene)) +
geom_line() +
ggtitle(title) +
theme(legend.position="none"))
print(ggplot(subArray,aes(x=as.numeric(Time.Point),y=Size,color=Gene,group=Gene)) +
geom_line() +
ggtitle(title) +
theme(legend.position="none"))
condition = "YPD_30"
array = 1
subCondition = subset(agg,agg$Condition == condition)
subArray = subset(subCondition,subCondition$Array == array)
title = paste(condition, "Array", array)
print(ggplot(subArray,aes(x=as.numeric(Time.Point),y=Size,color=Gene,group=Gene)) +
geom_line() +
ggtitle(title) +
theme(legend.position="none"))
levels(df$Time.Point)
sort(unique(df$Time.Point))
file = "../../Process/all_time_points.outliers_removed.tab"
classes = c("numeric","numeric","character","numeric","factor","numeric","factor","factor",  "factor", "character", "numeric")
df = read.table(file,header=T, colClasses=classes,sep="\t")
df$Time.Point = as.numeric(as.character(df$Time.Point))
agg = aggregate(formula = Size ~ Gene + Condition + Array + Time.Point, data = df, FUN=mean)
file = "../../Process/all_time_points.outliers_removed.tab"
classes = c("numeric","numeric","character","numeric","factor","numeric","factor","factor",  "factor", "character", "numeric")
df = read.table(file,header=T, colClasses=classes,sep="\t")
file = "../../Process/all_time_points.outliers_removed.tab"
classes = c("numeric","numeric","character","numeric","factor","numeric","factor","factor",  "factor", "character", "numeric")
df = read.table(file,header=T, colClasses=classes,sep="\t")
file = "../../Process/all_time_points.outliers_removed.tab"
classes = c("numeric","numeric","character","numeric","factor","character","factor","factor",  "factor", "character", "numeric")
df = read.table(file,header=T, colClasses=classes,sep="\t")
df$Time.Point = as.numeric(as.character(df$Time.Point))
agg = aggregate(formula = Size ~ Gene + Condition + Array + Time.Point, data = df, FUN=mean)
require(ggplot2)
conditions = sort(unique(df$Condition))
arrays = sort(unique(df$Array))
for(condition in conditions){
subCondition = subset(agg,agg$Condition == condition)
for(array in arrays){
subArray = subset(subCondition,subCondition$Array == array)
title = paste(condition, "Array", array)
print(ggplot(subArray,aes(x=as.numeric(Time.Point),y=Size,color=Gene,group=Gene)) +
geom_line() +
ggtitle(title) +
theme(legend.position="none"))
scan()
}
}
file = "../../Process/all_time_points.outliers_removed.tab"
classes = c("numeric","numeric","character","numeric","factor","character","factor","factor",  "factor", "character", "numeric")
df = read.table(file,header=T, colClasses=classes,sep="\t")
df$Time.Point = as.numeric(as.character(df$Time.Point))
agg = aggregate(formula = Size ~ Gene + Condition + Array + Time.Point, data = df, FUN=mean)
require(ggplot2)
conditions = sort(unique(df$Condition))
arrays = sort(unique(df$Array))
for(condition in conditions){
subCondition = subset(agg,agg$Condition == condition)
for(array in arrays){
subArray = subset(subCondition,subCondition$Array == array)
title = paste(condition, "Array", array)
print(ggplot(subArray,aes(x=as.numeric(Time.Point),y=Size,color=Gene,group=Gene)) +
geom_line() +
ggtitle(title) +
theme(legend.position="none"))
scan()
}
}
source('~/Sequencing_Research/Tools_&_Data/MitoMitoEpistasis/MME_Ph3/E1 nucler/Robot Image Analysis v1.0/Graphs/All Time Points Curves/all_time_points_curves.R')
sort(unique(df$Time.Point))
source('~/Sequencing_Research/Tools_&_Data/MitoMitoEpistasis/MME_Ph3/E1 nucler/Robot Image Analysis v1.0/Graphs/All Time Points Curves/all_time_points_curves.R')
source('~/Sequencing_Research/Tools_&_Data/Robot Image Analysis Development/Robot Image Analysis 2.0/Graphs/All Time Points Curves/all_time_points_curves.R')
source('~/Sequencing_Research/Tools_&_Data/Robot Image Analysis Development/Robot Image Analysis 2.0/Graphs/All Time Points Curves/all_time_points_curves.R')
source('~/Sequencing_Research/Tools_&_Data/Robot Image Analysis Development/Robot Image Analysis 2.0/Graphs/All Time Points Curves/all_time_points_curves.R')
source('~/Sequencing_Research/Tools_&_Data/Robot Image Analysis Development/Robot Image Analysis 2.0/Graphs/All Time Points Curves/all_time_points_curves.R')
source('~/Sequencing_Research/Tools_&_Data/Robot Image Analysis Development/Robot Image Analysis 2.0/Graphs/All Time Points Curves/all_time_points_curves.R')
timepoints = sort(unique(df$Time.Point))
source('~/Sequencing_Research/Tools_&_Data/Robot Image Analysis Development/Robot Image Analysis 2.0/Graphs/All Time Points Curves/all_time_points_curves.R')
##delete any pre-existing gridded images
do.call(file.remove, list(list.files("gridded", full.names = TRUE)))
file = "../../Process/all_time_points.tab"
classes = c("numeric","numeric","character","numeric","factor","numeric","factor","factor",  "factor", "character")
df = read.table(file,header=T, colClasses=classes,sep="\t")
timepoints = sort(unique(df$Time.Point))
agg = aggregate(formula = Size ~ Gene + Condition + Array + Time.Point, data = df, FUN=mean)
require(ggplot2)
conditions = sort(unique(df$Condition))
arrays = sort(unique(df$Array))
for(condition in conditions){
subCondition = subset(agg,agg$Condition == condition)
for(array in arrays){
subArray = subset(subCondition,subCondition$Array == array)
title = paste(condition, "Array", array)
print(ggplot(subArray,aes(x=as.numeric(Time.Point),y=Size,color=Gene,group=Gene)) +
geom_line() +
ggtitle(title) +
theme(legend.position="none"))
fn = paste("growth_curves",condition,array,"png",sep=".")
ggsave(fn,path="graphs")
}
}
##delete any pre-existing gridded images
do.call(file.remove, list(list.files("gridded", full.names = TRUE)))
file = "../../Process/all_time_points.tab"
classes = c("numeric","numeric","character","numeric","factor","numeric","factor","factor",  "factor", "character")
df = read.table(file,header=T, colClasses=classes,sep="\t")
timepoints = sort(unique(df$Time.Point))
agg = aggregate(formula = Size ~ Gene + Condition + Array + Time.Point, data = df, FUN=mean)
require(ggplot2)
conditions = sort(unique(df$Condition))
arrays = sort(unique(df$Array))
for(condition in conditions){
subCondition = subset(agg,agg$Condition == condition)
for(array in arrays){
subArray = subset(subCondition,subCondition$Array == array)
title = paste(condition, "Array", array)
print(ggplot(subArray,aes(x=as.numeric(Time.Point),y=Size,color=Gene,group=Gene)) +
geom_line() +
ggtitle(title) +
theme(legend.position="none"))
fn = paste("growth_curves",condition,array,"png",sep=".")
ggsave(fn,path="graphs")
}
}
source('~/Dropbox/HLF Laboratory/2019/Robot Image Analysis 2.1/Graphs/All Time Points Curves/all_time_points_curves.R')
##delete any pre-existing gridded images
do.call(file.remove, list(list.files("gridded", full.names = TRUE)))
file = "../../Process/all_time_points.tab"
classes = c("numeric","numeric","character","numeric","factor","numeric","factor","factor",  "factor", "character")
df = read.table(file,header=T, colClasses=classes,sep="\t")
timepoints = sort(unique(df$Time.Point))
agg = aggregate(formula = Size ~ Gene + Condition + Array + Time.Point, data = df, FUN=mean)
require(ggplot2)
conditions = sort(unique(df$Condition))
arrays = sort(unique(df$Array))
for(condition in conditions){
subCondition = subset(agg,agg$Condition == condition)
for(array in arrays){
subArray = subset(subCondition,subCondition$Array == array)
title = paste(condition, "Array", array)
print(ggplot(subArray,aes(x=as.numeric(Time.Point),y=Size,color=Gene,group=Gene)) +
geom_line() +
ggtitle(title) +
theme(legend.position="none"))
fn = paste("growth_curves",condition,array,"png",sep=".")
ggsave(fn,path="graphs")
}
}
##delete any pre-existing gridded images
do.call(file.remove, list(list.files("gridded", full.names = TRUE)))
file = "../../Process/all_time_points.tab"
classes = c("numeric","numeric","character","numeric","factor","numeric","factor","factor",  "factor", "character")
df = read.table(file,header=T, colClasses=classes,sep="\t")
timepoints = sort(unique(df$Time.Point))
agg = aggregate(formula = Size ~ Gene + Condition + Array + Time.Point, data = df, FUN=mean)
require(ggplot2)
conditions = sort(unique(df$Condition))
arrays = sort(unique(df$Array))
for(condition in conditions){
subCondition = subset(agg,agg$Condition == condition)
for(array in arrays){
subArray = subset(subCondition,subCondition$Array == array)
title = paste(condition, "Array", array)
print(ggplot(subArray,aes(x=as.numeric(Time.Point),y=Size,color=Gene,group=Gene)) +
geom_line() +
ggtitle(title) +
theme(legend.position="none"))
fn = paste("growth_curves",condition,array,"png",sep=".")
ggsave(fn,path="graphs")
}
}
