for(array in arrays){
subArray = subset(subCondition,subCondition$Array == array)
title = paste(condition, "Array", array)
print(ggplot(subArray,aes(x=as.numeric(Time.Point),y=Size,color=Gene,group=Gene)) +
geom_line() +
ggtitle(title) +
theme(legend.position="none"))
scan()
}
}
sort(unique(agg$Time.Point))
classes = c("numeric","numeric","character","numeric","factor","factor","factor","factor",  "factor", "character", "numeric")
df = read.table("all_time_points.tab",header=T, colClasses=classes,sep="\t")
classes = c("numeric","numeric","character","numeric","factor","factor","factor","factor",  "factor", "character", "numeric")
df = read.table("all_time_points.tab",header=T, colClasses=classes,sep="\t")
tFinal = subset(df, df$Time.Point == 140.5)
outlierDF = data.frame(Gene = character(),
Media = factor(),
Temp = factor(),
Array = factor(),
Well = character())
arrays = sort(unique(tFinal$Array))
conditions = sort(unique(tFinal$Condition))
for(array in arrays){
subArray = subset(tFinal, tFinal$Array == array)
for(condition in conditions){
subCondition = subset(subArray, subArray$Condition == condition)
# media = subCondition$Media[1]
# temp = subCondition$Temp[1]
names = sort(unique(subCondition$Gene))
for(name in names){
block = subset(subCondition,subCondition$Gene == name)
# mean_size = mean(block$Size)
# sd_size = sd(block$Size)
for(i in 1:nrow(block)){
spot = block[i,]
omit_block = block[-i,]
mean_size = mean(omit_block$Size)
sd_size = sd(omit_block$Size)
if(spot$Size < (mean_size - 4*sd_size) |
spot$Size > (mean_size + 4*sd_size)){
spot = spot[,c(3,5,7,8,10)]
outlierDF = rbind(outlierDF,spot)
}
}
}
}
}
head(outlierDF)
library(dplyr)
?anti_join
outlier_removed_df = anti_join(df, outlierDF, by = c("Media" , "Temp", "Array", "Well"))
387482 + 130
head(outlier_removed_df)
130*19
387482+2470
?write.tasble
?write.table
write.table(outlier_removed_df, "all_time_points.outliers_removed.tab",row.names = F, sep = "\T")
write.table(outlier_removed_df, "all_time_points.outliers_removed.tab",row.names = F, sep = "\t")
classes = c("numeric","numeric","character","numeric","factor","factor","factor","factor")
df = read.table("../Analyze/consolidated_data.txt",header=T, colClasses=classes,sep="\t")
Condition = paste(df$Media, df$Temp, sep = "_")
Well=paste("r",df$Row,"c",df$Col,sep="")
df$Condition = factor(Condition)
df$Well = Well
strain_remove_table = read.table("strains_to_remove.txt",header=T)
strain_remove_table = read.table("strains_to_remove.txt",header=T,sep="\t")
df = subset(df, !(df$Gene %in% strain_remove_table$Gene ))
sort(unique(df$Gene))
spot_remove_table = read.table("spots_to_remove.txt",header=T,sep="\t")
library(dplyr)
df = anti_join(df, spot_remove_table, by = c("Array","Media" , "Temp", "Row","Col"))
spot_remove_table = read.table("spots_to_remove.txt",header=T,sep="\t",
colClasses = c("factor","factor","factor",
"character","character","character"))
library(dplyr)
df = anti_join(df, spot_remove_table, by = c("Array","Media" , "Temp", "Row","Col"))
spot_remove_table = read.table("spots_to_remove.txt",header=T,sep="\t",
colClasses = c("factor","factor","factor",
"numeric","numeric","character"))
library(dplyr)
df = anti_join(df, spot_remove_table, by = c("Array","Media" , "Temp", "Row","Col"))
names(df)
spot_remove_table = read.table("spots_to_remove.txt",header=T,sep="\t",
colClasses = c("factor","factor","factor",
"numeric","numeric","character"))
df = anti_join(df, spot_remove_table, by = c("Array","Media" , "Temp", "Row","Column"))
unusable_rows = c(1,4,5,8,9,12,13,16,17,20,21,24,25,28,29,32)
unusable_cols = c(1,8,9,16,17,24,25,32,33,40,41,48)
df = subset(df, !(df$Row %in% unusable_rows))
df = subset(df, !(df$Col %in% unusable_cols))
df = df[order(df$Array,df$Condition,df$Time.Point,df$Row,df$Col),]
new_df = data.frame(Row=numeric(),
Col = numeric(),
Gene = factor(),
Size = numeric(),
Media = factor(),
Time.Point = factor(),
Temp = factor(),
Array = factor(),
Condition = factor(),
Well = character(),
Norm_size = numeric()
)
for(array in sort(unique(df$Array))){
subDF = subset(df,df$Array == array)
###For each Condition
for(condition in sort(unique(df$Condition))){
subCondition = subset(subDF, subDF$Condition == condition)
###For each Time Point
for(time in sort(unique(df$Time.Point))){
subTime = subset(subCondition, subCondition$Time.Point == time)
if(nrow(subTime) != 0){ #only proceed if this combination of array, media, and time point actually exists
ref_values = subTime$Size[subTime$Gene == "Ref"]
ref_mean = mean(ref_values)
subTime$Norm_Size = subTime$Size / ref_mean
new_df = rbind(new_df, subTime)
# df$Norm_Size[i:i+575] = subTime$Norm_Size
# i=i+576
}
}
}
}
df = new_df
write.table(df, "all_time_points.tab",row.names=F,sep="\t")
library(dplyr)
classes = c("numeric","numeric","character","numeric","factor","factor","factor","factor",  "factor", "character", "numeric")
df = read.table("all_time_points.tab",header=T, colClasses=classes,sep="\t")
tFinal = subset(df, df$Time.Point == 140.5)
outlierDF = data.frame(Gene = character(),
Media = factor(),
Temp = factor(),
Array = factor(),
Well = character())
arrays = sort(unique(tFinal$Array))
conditions = sort(unique(tFinal$Condition))
for(array in arrays){
subArray = subset(tFinal, tFinal$Array == array)
for(condition in conditions){
subCondition = subset(subArray, subArray$Condition == condition)
# media = subCondition$Media[1]
# temp = subCondition$Temp[1]
names = sort(unique(subCondition$Gene))
for(name in names){
block = subset(subCondition,subCondition$Gene == name)
# mean_size = mean(block$Size)
# sd_size = sd(block$Size)
for(i in 1:nrow(block)){
spot = block[i,]
omit_block = block[-i,]
mean_size = mean(omit_block$Size)
sd_size = sd(omit_block$Size)
if(spot$Size < (mean_size - 4*sd_size) |
spot$Size > (mean_size + 4*sd_size)){
spot = spot[,c(3,5,7,8,10)]
outlierDF = rbind(outlierDF,spot)
}
}
}
}
}
outlier_removed_df = anti_join(df, outlierDF, by = c("Media" , "Temp", "Array", "Well"))
write.table(outlier_removed_df, "all_time_points.outliers_removed.tab",row.names = F, sep = "\t")
source('~/Sequencing_Research/Tools_&_Data/MitoMitoEpistasis/MME_Ph3/C1 Nuclear/Process/process_data.R')
source('~/Sequencing_Research/Tools_&_Data/MitoMitoEpistasis/MME_Ph3/C1 Nuclear/Process/remove_outliers.R')
classes = c("numeric","numeric","character","numeric","factor","factor","factor","factor",  "factor", "character", "numeric")
classes = c("numeric","numeric","character","numeric","factor","factor","factor","factor",  "factor", "character", "numeric")
df = read.table("all_time_points.outliers_removed.tab",header=T, colClasses=classes,sep="\t")
df_t0 = df[df$Time.Point == 0 , ]
df_t2 = df[df$Time.Point == 92.5 ,]
size_diff = df_t2$Norm_size - df_t0$Norm_size
diff_df = cbind(df_t0, SizeDiff)
SizeDiff = df_t2$Norm_size - df_t0$Norm_size
diff_df = cbind(df_t0, SizeDiff)
SizeDiff = df_t2$Norm_size - df_t0$Norm_size
names(df)
SizeDiff = df_t2$Norm_size - df_t0$Norm_Size
SizeDiff = df_t2$Norm_Size - df_t0$Norm_Size
sort(unique(df_t2$Condition))
df_t0 = df[df$Time.Point == 0 , ]
df_t2 = df[df$Time.Point == 92.5 ,]
nrow(df_t0) - nrow(df_t2)
sort(unique(df_t2$Array))
df = read.table("all_time_points.tab",header=T, colClasses=classes,sep="\t")
df_t0 = df[df$Time.Point == 0 , ]
df_t2 = df[df$Time.Point == 92.5 ,]
nrow(df_t0) - nrow(df_t2)
df = read.table("all_time_points.outliers_removed.tab",header=T, colClasses=classes,sep="\t")
df = subset(df, !(df$Condition == "SOE_30" & df$Array == 1))
df_t0 = df[df$Time.Point == 0 , ]
df_t2 = df[df$Time.Point == 92.5 ,]
SizeDiff = df_t2$Norm_Size - df_t0$Norm_Size
diff_df = cbind(df_t0, SizeDiff)
names(diff_df)
diff_df = diff_df[,c(1,2,3,5,7,8,9,10,12)]
names(diff_df)
new_df = data.frame(Row=numeric(),
Col = numeric(),
Gene = factor(),
Media = factor(),
Temp = factor(),
Array = factor(),
Condition = factor(),
Well = character(),
SizeDiff = numeric()
)
for(array in sort(unique(df$Array))){
subDF = subset(df,df$Array == array)
###For each Condition
for(condition in sort(unique(df$Condition))){
subCondition = subset(subDF, subDF$Condition == condition)
ref_values = subCondition$SizeDiff[subCondition$Gene == "Ref"]
ref_mean = mean(ref_values)
subCondition$SizeDiff = subCondition$SizeDiff / ref_mean
new_df = rbind(new_df, subTime)
}
}
for(array in sort(unique(df$Array))){
subDF = subset(df,df$Array == array)
###For each Condition
for(condition in sort(unique(df$Condition))){
subCondition = subset(subDF, subDF$Condition == condition)
ref_values = subCondition$SizeDiff[subCondition$Gene == "Ref"]
ref_mean = mean(ref_values)
subCondition$SizeDiff = subCondition$SizeDiff / ref_mean
new_df = rbind(new_df, subCondition)
}
}
for(array in sort(unique(df$Array))){
subDF = subset(df,df$Array == array)
###For each Condition
for(condition in sort(unique(subDF$Condition))){
subCondition = subset(subDF, subDF$Condition == condition)
ref_values = subCondition$SizeDiff[subCondition$Gene == "Ref"]
ref_mean = mean(ref_values)
subCondition$SizeDiff = subCondition$SizeDiff / ref_mean
new_df = rbind(new_df, subCondition)
}
}
head(subCondition)
new_df = data.frame(Row=numeric(),
Col = numeric(),
Gene = factor(),
Media = factor(),
Temp = factor(),
Array = factor(),
Condition = factor(),
Well = character(),
SizeDiff = numeric()
)
for(array in sort(unique(diff_df$Array))){
subDF = subset(diff_df,diff_df$Array == array)
###For each Condition
for(condition in sort(unique(subDF$Condition))){
subCondition = subset(subDF, subDF$Condition == condition)
ref_values = subCondition$SizeDiff[subCondition$Gene == "Ref"]
ref_mean = mean(ref_values)
subCondition$SizeDiff = subCondition$SizeDiff / ref_mean
new_df = rbind(new_df, subCondition)
}
}
diff_df = new_df
head(diff_df)
ref_values
ref_mean
SizeDiff = df_t2$Size - df_t0$Size
diff_df = cbind(df_t0, SizeDiff)
diff_df = diff_df[,c(1,2,3,5,7,8,9,10,12)]
new_df = data.frame(Row=numeric(),
Col = numeric(),
Gene = factor(),
Media = factor(),
Temp = factor(),
Array = factor(),
Condition = factor(),
Well = character(),
SizeDiff = numeric()
)
for(array in sort(unique(diff_df$Array))){
subDF = subset(diff_df,diff_df$Array == array)
###For each Condition
for(condition in sort(unique(subDF$Condition))){
subCondition = subset(subDF, subDF$Condition == condition)
ref_values = subCondition$SizeDiff[subCondition$Gene == "Ref"]
ref_mean = mean(ref_values)
subCondition$SizeDiff = subCondition$SizeDiff / ref_mean
new_df = rbind(new_df, subCondition)
}
}
head(new_df)
diff_df = new_df
temp_df = subset(df, df$Condition == "SOE_30" & df$Array == 1)
temp_df_t0 = temp_df[df$Time.Point == 0 , ]
temp_df_t2 = temp_df[df$Time.Point == 68.5 ,]
temp_SizeDiff = temp_df_t2$Size - temp_df_t0$Size
temp_diff_df = cbind(temp_df_t0, temp_SizeDiff)
temp_diff_df = temp_diff_df[,c(1,2,3,5,7,8,9,10,12)]
new_df = data.frame(Row=numeric(),
Col = numeric(),
Gene = factor(),
Media = factor(),
Temp = factor(),
Array = factor(),
Condition = factor(),
Well = character(),
SizeDiff = numeric()
)
for(array in sort(unique(diff_df$Array))){
subDF = subset(diff_df,diff_df$Array == array)
###For each Condition
for(condition in sort(unique(subDF$Condition))){
subCondition = subset(subDF, subDF$Condition == condition)
ref_values = subCondition$SizeDiff[subCondition$Gene == "Ref"]
ref_mean = mean(ref_values)
subCondition$SizeDiff = subCondition$SizeDiff / ref_mean
new_df = rbind(new_df, subCondition)
}
}
diff_df = rbind(diff_df,new_df)
diff_df = diff_df[order(diff_df$Condition,diff_df$Array,diff_df$Well),]
head(diff_df)
sort(unique(diff_df$Condition
)
)
diff_df = diff_df[order(diff_df$Media,
diff_df$Temp,
diff_df$Array,
as.numeric(diff_df$Row),
as.numeric(diff_df$Column)),]
head(diff_df)
diff_df = diff_df[order(diff_df$Media,
diff_df$Temp,
as.numeric(diff_df$Array),
as.numeric(diff_df$Row),
as.numeric(diff_df$Column)),]
head(diff_df)
diff_df = diff_df[order(diff_df$Media,
diff_df$Temp,
as.numeric(as.character(diff_df$Array)),
as.numeric(diff_df$Row),
as.numeric(diff_df$Column)),]
head(diff_df)
diff_df[diff_df$Array == 1 & diff_df$Condition == "SOE_30",]
sort(unique(diff_df$Array)
)
source('~/Sequencing_Research/Tools_&_Data/MitoMitoEpistasis/MME_Ph3/C1 Nuclear/Process/calculate_size_difference.R')
head(diff_df)
sort(unique(diff_df$Array))
diff_df[diff_df$Array == 1 & diff_df$Condition == "SOE_30",]
new_df = data.frame(Row=numeric(),
Col = numeric(),
Gene = factor(),
Media = factor(),
Temp = factor(),
Array = factor(),
Condition = factor(),
Well = character(),
SizeDiff = numeric()
)
for(array in sort(unique(temp_diff_df$Array))){
subDF = subset(temp_diff_df,temp_diff_df$Array == array)
###For each Condition
for(condition in sort(unique(subDF$Condition))){
subCondition = subset(subDF, subDF$Condition == condition)
ref_values = subCondition$SizeDiff[subCondition$Gene == "Ref"]
ref_mean = mean(ref_values)
subCondition$SizeDiff = subCondition$SizeDiff / ref_mean
new_df = rbind(new_df, subCondition)
}
}
diff_df = rbind(diff_df,new_df)
source('~/Sequencing_Research/Tools_&_Data/MitoMitoEpistasis/MME_Ph3/C1 Nuclear/Process/calculate_size_difference.R')
head(diff_df)
diff_df[diff_df$Array == 1 & diff_df$Condition == "SOE_30",]
temp_df = subset(df, df$Condition == "SOE_30" & df$Array == 1)
head(temp_df)
sort(unique(df$Condition))
source('~/Sequencing_Research/Tools_&_Data/MitoMitoEpistasis/MME_Ph3/C1 Nuclear/Process/calculate_size_difference.R')
temp_df = subset(all_df, all_df$Condition == "SOE_30" & all_df$Array == 1)
temp_df_t0 = temp_df[temp_df$Time.Point == 0 , ]
temp_df_t2 = temp_df[temp_df$Time.Point == 68.5 ,]
temp_SizeDiff = temp_df_t2$Size - temp_df_t0$Size
temp_diff_df = cbind(temp_df_t0, temp_SizeDiff)
temp_diff_df = temp_diff_df[,c(1,2,3,5,7,8,9,10,12)]
new_df = data.frame(Row=numeric(),
Col = numeric(),
Gene = factor(),
Media = factor(),
Temp = factor(),
Array = factor(),
Condition = factor(),
Well = character(),
SizeDiff = numeric()
)
for(array in sort(unique(temp_diff_df$Array))){
subDF = subset(temp_diff_df,temp_diff_df$Array == array)
###For each Condition
for(condition in sort(unique(subDF$Condition))){
subCondition = subset(subDF, subDF$Condition == condition)
ref_values = subCondition$SizeDiff[subCondition$Gene == "Ref"]
ref_mean = mean(ref_values)
subCondition$SizeDiff = subCondition$SizeDiff / ref_mean
new_df = rbind(new_df, subCondition)
}
}
head(subCondition)
temp_df = subset(all_df, all_df$Condition == "SOE_30" & all_df$Array == 1)
temp_df_t0 = temp_df[temp_df$Time.Point == 0 , ]
temp_df_t2 = temp_df[temp_df$Time.Point == 68.5 ,]
SizeDiff = temp_df_t2$Size - temp_df_t0$Size
temp_diff_df = cbind(temp_df_t0, SizeDiff)
temp_diff_df = temp_diff_df[,c(1,2,3,5,7,8,9,10,12)]
new_df = data.frame(Row=numeric(),
Col = numeric(),
Gene = factor(),
Media = factor(),
Temp = factor(),
Array = factor(),
Condition = factor(),
Well = character(),
SizeDiff = numeric()
)
for(array in sort(unique(temp_diff_df$Array))){
subDF = subset(temp_diff_df,temp_diff_df$Array == array)
###For each Condition
for(condition in sort(unique(subDF$Condition))){
subCondition = subset(subDF, subDF$Condition == condition)
ref_values = subCondition$SizeDiff[subCondition$Gene == "Ref"]
ref_mean = mean(ref_values)
subCondition$SizeDiff = subCondition$SizeDiff / ref_mean
new_df = rbind(new_df, subCondition)
}
}
diff_df = rbind(diff_df,new_df)
source('~/Sequencing_Research/Tools_&_Data/MitoMitoEpistasis/MME_Ph3/C1 Nuclear/Process/calculate_size_difference.R')
head(diff_df)
write.table(diff_df,file="SizeDiff.tab",row.names=FALSE,sep="\t")
source('~/Sequencing_Research/Tools_&_Data/MitoMitoEpistasis/MME_Ph3/E1 nucler/Robot Image Analysis v1.0/Process/process_data.R')
install.packages("dplyr")
source('~/Sequencing_Research/Tools_&_Data/MitoMitoEpistasis/MME_Ph3/E1 nucler/Robot Image Analysis v1.0/Process/process_data.R')
head(df)
source('~/Sequencing_Research/Tools_&_Data/MitoMitoEpistasis/MME_Ph3/E1 nucler/Robot Image Analysis v1.0/Process/remove_outliers.R')
levels(df$Time.Point)
source('~/Sequencing_Research/Tools_&_Data/MitoMitoEpistasis/MME_Ph3/E1 nucler/Robot Image Analysis v1.0/Process/remove_outliers.R')
head(outlier_removed_df)
source('~/Sequencing_Research/Tools_&_Data/MitoMitoEpistasis/MME_Ph3/E1 nucler/Robot Image Analysis v1.0/Process/process_data.R')
source('~/Sequencing_Research/Tools_&_Data/MitoMitoEpistasis/MME_Ph3/E1 nucler/Robot Image Analysis v1.0/Process/remove_outliers.R')
source('~/Sequencing_Research/Tools_&_Data/MitoMitoEpistasis/MME_Ph3/E1 nucler/Robot Image Analysis v1.0/Process/process_data.R')
source('~/Sequencing_Research/Tools_&_Data/MitoMitoEpistasis/MME_Ph3/E1 nucler/Robot Image Analysis v1.0/Process/process_data.R')
source('~/Sequencing_Research/Tools_&_Data/MitoMitoEpistasis/MME_Ph3/E1 Nuclear/Robot Image Analysis v1.0/Process/process_data.R')
source('~/Sequencing_Research/Tools_&_Data/MitoMitoEpistasis/MME_Ph3/E1 Nuclear/Robot Image Analysis v1.0/Process/remove_time_points.R')
source('~/Sequencing_Research/Tools_&_Data/Robot Image Analysis Development/Robot Image Analysis 2.0/Process/process_data.R')
source('~/Sequencing_Research/Tools_&_Data/Robot Image Analysis Development/Robot Image Analysis 2.0/Process/process_data.R')
source('~/Sequencing_Research/Tools_&_Data/Robot Image Analysis Development/Robot Image Analysis 2.0/Process/process_data.R')
source('~/Sequencing_Research/Tools_&_Data/Robot Image Analysis Development/Robot Image Analysis 2.0/Process/remove_time_points.R')
####Read in data
classes = c("numeric","numeric","character","numeric","factor","numeric","factor","factor")
df = read.table("../Analyze/consolidated_data.txt",header=T, colClasses=classes,sep="\t")
##Add a column with "Condition whichis the combination of Media and Temperature
Condition = paste(df$Media, df$Temp, sep = "_")
Well=paste("r",df$Row,"c",df$Col,sep="")
df$Condition = factor(Condition)
df$Well = Well
##remove strains that are problematic
strain_remove_table = read.table("strains_to_remove.txt",header=T,sep="\t")
df = subset(df, !(df$Gene %in% strain_remove_table$Gene ))
##remove spots that are problematic
spot_remove_table = read.table("spots_to_remove.txt",header=T,sep="\t",
colClasses = c("factor","factor","factor",
"numeric","numeric","character"))
library(dplyr)
df = anti_join(df, spot_remove_table, by = c("Array","Media" , "Temp", "Row","Column"))
unusable_rows = c(1,2,4,5,8,9,12,13,16,17,20,21,24,25,28,29,31,32)
unusable_cols = c(1,2,8,9,16,17,24,25,32,33,40,41,47,48)
df = subset(df, !(df$Row %in% unusable_rows))
df = subset(df, !(df$Col %in% unusable_cols))
##At this stage, the df has had all the spots in the perimeters of the blocks removed
df = df[order(df$Array,df$Condition,df$Time.Point,df$Row,df$Col),]
####Output all the time points
write.table(df, "all_time_points.tab",row.names=F,sep="\t")
####Read in data
classes = c("numeric","numeric","character","numeric","factor","numeric","factor","factor")
df = read.table("../Analyze/consolidated_data.txt",header=T, colClasses=classes,sep="\t")
View(df_t0)
View(df)
##Add a column with "Condition whichis the combination of Media and Temperature
Condition = paste(df$Media, df$Temp, sep = "_")
Well=paste("r",df$Row,"c",df$Col,sep="")
df$Condition = factor(Condition)
df$Well = Well
##remove strains that are problematic
strain_remove_table = read.table("strains_to_remove.txt",header=T,sep="\t")
df = subset(df, !(df$Gene %in% strain_remove_table$Gene ))
##remove spots that are problematic
spot_remove_table = read.table("spots_to_remove.txt",header=T,sep="\t",
colClasses = c("factor","factor","factor",
"numeric","numeric","character"))
library(dplyr)
df = anti_join(df, spot_remove_table, by = c("Array","Media" , "Temp", "Row","Column"))
unusable_rows = c(1,2,4,5,8,9,12,13,16,17,20,21,24,25,28,29,31,32)
unusable_cols = c(1,2,8,9,16,17,24,25,32,33,40,41,47,48)
df = subset(df, !(df$Row %in% unusable_rows))
df = subset(df, !(df$Col %in% unusable_cols))
##At this stage, the df has had all the spots in the perimeters of the blocks removed
df = df[order(df$Array,df$Condition,df$Time.Point,df$Row,df$Col),]
####Output all the time points
write.table(df, "all_time_points.tab",row.names=F,sep="\t")
df = subset(df, Media!="YPD")
View(df)
####Output all the time points
write.table(df, "all_time_points.tab",row.names=F,sep="\t")
